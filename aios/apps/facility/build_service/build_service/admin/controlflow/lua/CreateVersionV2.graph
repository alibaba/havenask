#import(Tool)
#import(Log)

function graphDef()
   local param = Tool.copyMap(Graph.parameter)
   local clusterName = param["clusterName"]

   --get last inc flow, set upstream
   local incFlowTag = clusterName..":IncBuild"
   local incFlowIds = Graph.getFlowIdByTag(incFlowTag)
   local lastFlowId = incFlowIds[#incFlowIds]
   local lastIncFlow = Graph.getFlow(lastFlowId)
   Log.log("", "last inc flow id:"..lastFlowId)
   local kvMap = KVParamUtil()
   for k,v in pairs(param) do
       kvMap:setValue(k, v)
   end
   if (lastIncFlow)
   then
      Log.log("", "finishing task:"..lastFlowId)
      if (lastIncFlow:finishTask("incBuilder", kvMap:toJsonString()))
      then
         Log.log("", "inc builder finishing")
         lastIncFlow:setProperty("_flow_status_", "finishing")
         local incProcessorIds = Graph.getFlowIdByTag(clusterName..":BSIncProcessor")
         if ((#incProcessorIds) > 0)
         then
              local lastProcessorFlowId = incProcessorIds[#incProcessorIds]
              param['incProcessorFlowId'] = lastProcessorFlowId
              incProcessor = Graph.getFlow(lastProcessorFlowId)
         else
              local dsJson = Graph.parameter["realtimeDataDescription"]
              param["data_description"] = dsJson
         end
         local incBuild = Graph.loadFlow("IncBuildV2.flow", param)
         if ((#incProcessorIds) > 0)
         then
              Graph.declareFriend(incProcessor, incBuild)
         end
         incBuild:addTag(clusterName..":IncBuild")
         incBuild:addTag("BSBuildV2")
         Graph.setUpstream(incBuild, lastIncFlow)
         return true
      end
   end
   return false
end
