#import(Tool)
#import(Log)

--todo support add prepare data source task
function graphDef()
   local clusterNames = Tool.jsonToList(Graph.parameter["clusterNames"])
   if (#clusterNames > 1)
   then
      Log.log("ERROR", "update2add graph not support multi clusters.")
      return false;
   end
   
   local clusterName = clusterNames[1]
   local schemaIdMap = Tool.jsonToMap(Graph.parameter["schemaIdMap"])
   
   local incParam = Tool.copyMap(Graph.parameter)
   incParam["clusterName"] = clusterName
   incParam["schemaId"] = schemaIdMap[clusterName]
   local fullParam = Tool.copyMap(Graph.parameter)
   fullParam["clusterName"] = clusterName
   fullParam["schemaId"] = schemaIdMap[clusterName]

   --prepare inc processor
   incParam["buildStep"] = "incremental"
   
   local incProcessor = Graph.loadFlow("IncProcessor.flow", incParam)
   -- local incProcessor = Graph.loadSimpleFlow("processor", "incProcessor", incParam)
   incProcessor:addTag("BSIncProcess")
   incProcessor:addTag(clusterName..":BSIncProcessor")
   incParam["processorFlowId"] = incProcessor:getFlowId()

   local hasFullBuild = (Graph.parameter["buildStep"] == "full") 
   if (hasFullBuild)
   then
      -- prepare full processor
      fullParam["buildStep"] = "full"
      fullParam["fullBuildProcessLastSwiftSrc"] = "false"
      fullProcessor = Graph.loadSimpleFlow(
                    "processor", "fullProcessor", fullParam)
      fullProcessor:addTag("BSFullProcess")
   end
   
   --prepare merge crontab
   fullParam["fullMergeStrategyCount"] = 2
   local mergeCrontab = Graph.loadSimpleFlow(
            "mergeCrontab", "mergeCrontab", fullParam)
   local mergeCrontabTag = clusterName..":MergeCrontab"
   mergeCrontab:addTag(mergeCrontabTag)

   --prepare inc build
   incParam["mergeCrontabFlowId"] = mergeCrontab:getFlowId()
   local incBuild = Graph.loadFlow("IncBuild.flow", incParam)
   local incBuildTag = clusterName..":IncBuild"
   incBuild:addTag(incBuildTag)
   Graph.declareFriend(mergeCrontab, incBuild)
   Graph.declareFriend(incProcessor, incBuild)
   if (hasFullBuild)
   then
         --prepare full build
         fullParam["fullProcessorFlowId"] = fullProcessor:getFlowId()
         fullParam["mergeCrontabFlowId"] = mergeCrontab:getFlowId()
         local fullBuild = Graph.loadFlow("FullBuild.flow", fullParam)
         fullBuild:addTag(clusterName..":FullBuild")
         fullBuild:addTag("BSFullBuild")
         Graph.setUpstream(incBuild, fullBuild)
         Graph.setUpstream(mergeCrontab, fullProcessor)
         Graph.declareFriend(fullProcessor, fullBuild)
         Graph.declareFriend(mergeCrontab, fullBuild)
         Graph.setUpstream(incProcessor, fullBuild)
   end
   return true
end

